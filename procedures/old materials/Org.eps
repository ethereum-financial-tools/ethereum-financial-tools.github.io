%!PS-Adobe-3.0 EPSF-3.0
%%HiResBoundingBox: 0.000000 0.000000 748.000000 540.000000
%APL_DSC_Encoding: UTF8
%APLProducer: (Version 10.13.6 (Build 17G65) Quartz PS Context)
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 748 540
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
%/as/ashow
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
%dup (number of ld's = )print == flush	% *** how many 
{ld}repeat pop
/SC{	% CSname
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		% pop the ctm: our gstate ctm on host is now identity
/cm {cmmtx astore CM concat}bd	% reset the matrix and then concat
/W{clip newpath}bd
/W*{eoclip newpath}bd

statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	% pop off the search results
    true
}{
    pop	% previous search result
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse

{	% HP is the product: we use this method of stroking because of a bug in their clone printers with certain T3 fonts
    { 
	{ % charCode Wx Wy
	    pop pop % charCode
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		% dont' bind
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd

/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd

/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	% don't use F
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd

/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	% leave room for imagetype and imagematrix
dict begin
{def} repeat
pop		% remove mark
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
% currentdict on stack
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	% pop imagedict from dict stack
}bd

/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ % x y
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ % x y
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        % x y
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		% don't bind sop
/cp_proc/x_proc ld 	% default moveto proc is for xwidths only
/base_charpath		% string array
{
    /t_array xs
    /t_i 0 def
    { % char
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		% default sop is stroke. Done here so we don't bind in /base_charpath 

% default sop is stroke
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ % newname encoding fontname
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ % newname fontname
findfont dup length dict copy definefont pop
}bd

L3? dup dup{save exch}if

% languagelevel2 ONLY code goes here

/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def

/setupFunEval % funDict -- 	% this calculates and sets up a function dict for evaulation.
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   % precompute the range data needed to map a sample value from the table to a range value
		    % this data looks like [ range0mul range0min range1mul range1min ... rangeN-1mul rangeN-1min ]
	[ 
	    0 1 nRange 1 sub
	    { % index
		    2 mul/nDim2 xd		% 2*dimension# we are dealing with
		    Range nDim2 get		% ymin
		    Range nDim2 1 add get	% ymin ymax 
		    1 index sub			% ymin (ymax-ymin)
						% xmin = 0, xmax = 255 (2^bitspersample - 1)
		    255 div			% ymin (ymax-ymin)/(xmax - xmin)
		    exch			% (ymax-ymin)/(xmax - xmin) ymin
	    }for
	]store
    end
}bd

/FunEval % val1 fundict -> comp1 comp2 ... compN
{
    begin
	% the value passed in is the base index into the table
	nRange mul /val xd	% compute the actual index to the table
				% since there are nRange entries per base index
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd % dim
	    val	% base value to use to do our lookup
	    add DataSource exch get %  lookedupval
	    mulRange nDim2 get mul 	% lookedupval*(ymax-ymin)/(xmax-xmin)
	    mulRange nDim2 1 add get % lookedupval*(ymax-ymin)/(xmax-xmin) ymin
	    add % interpolated result
	}for	% comp1 comp2 ... compN
    end
}bd

/max % a b -> max(a, b)
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd

/sh2
{	% emulation of shading type 2. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 x1 y1
	3 index 3 index translate	% origin is now at beginning point of shading
					% x0 y0 x1 y1
	3 -1 roll sub	% x0 x1 y1-y0
	3 1 roll exch 	% y1-y0 x1 x0
	sub				% y1-y0 x1-x0
	2 copy
	dup mul exch dup mul add sqrt	% length of segment between two points
	dup
	scale  
	atan	% atan (dy/dx)
	%dup (rotation angle = )print ==
	rotate		% now line between 0,0 and 1,0 is the line perpendicular to which the axial lines are drawn					
	
	/Function load setupFunEval	% may need to setup function dictionary by calling setupFunEval
	
	% this is now specific to axial shadings. Compute the maximum bounds to fill
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	% paint the rects. The sampling frequency is that of our table
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		% loop Nsteps + 1 times, incrementing the index by 1 each time
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	% pop our function
	grestore	% origin is back to start point
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	% last element
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd

/shp	% this paints our shape for shading type 3
{	% x1 r1 x0 r0 -
	4 copy

	% fill interior arc
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill

	% fill exterior arc
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd

/calcmaxs
{	% calculate maximum distance vector from origin to corner points
	% of bbox
	xmin dup mul ymin dup mul add sqrt		% (xmin2 + ymin2)
	xmax dup mul ymin dup mul add sqrt		% (xmax2 + ymin2)
	xmin dup mul ymax dup mul add sqrt		% (xmin2 + ymax2)
	xmax dup mul ymax dup mul add sqrt		% (xmax2 + ymax2)
	max max max								% maximum value
}bd

/sh3
{	% emulation of shading type 3. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 r1 x1 y1 r2
	5 index 5 index translate	% origin is now at first circle origin
	3 -1 roll 6 -1 roll sub		% y0 r1 y1 r2 dx
	3 -1 roll 5 -1 roll sub		% r1 r2 dx dy
	2 copy dup mul exch dup mul add sqrt
	/dx xs						% r1 r2 dx dy
	2 copy 0 ne exch 0 ne or
	{
		% r1 r2 dx dy
		exch atan rotate	% we are now rotated so dy is zero and positive values of dx move us as expected
	}{
		pop pop
	}ifelse
	% r1 r2		
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	% this is the size of our table minus 1
	/Nsteps xs		% at some point we should optimize this better so NSteps is based on needed steps for the device
	setupFunEval		% may need to setup function dictionary by calling setupFunEval
	% determine the case:
	% case 0: circle1 inside circle2
	% case 1: circle 2 inside circle 1
	% case 2: r1 = r2 
	% case 3: r1 != r2
	dx r2 add r1 lt{
		% circle 2 inside of circle 1
		0 
	}{
		dx r1 add r2 le
		{ % circle 1 inside of circle 2
			1
		}{ % circles don't contain each other
			r1 r2 eq
			{	% equal
				2
			}{ % r1 != r2
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		% sh3tp has the number of our different cases
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs

	% Arc angle atan( sqrt((dx*dx + dy*dy) - dr*dr), dr)
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		

	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	% no need to extend if the radius of the first end is 0
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{	% case 0
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				}
				{	% case 1
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	% case 2
					% r1 == r2, extend 0
					% r3 = r, x3 = -(abs(minx) + r), x1 = 0
				
					% x(i+1) r(i+1) x(i) r(i) shp
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	% case 3
					% no containment, r1 != r2
				
					r2 r1 gt{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1
						r1 neg r2 r1 sub div dx mul	% this is point of beginning circle
						0	% point of ending circle
						shp	% takes x(i+1) r(i+1) x(i) r(i)
					}{	% the first circle is the bigger of the two
						% we find a circle on our line which is outside the bbox in the
						% negative direction
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1 calcmaxs	% 0 r1 maxs
						dup
						% calculating xs: (-(maxs+r2)*x2)/(x2-(r1-r2))
						r2 add dx mul dx r1 r2 sub sub div
						neg				% maxs xs'
						exch 1 index	% xs' maxs xs'
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	% execute the extend at beginning proc for our shading type
		}if
	}if

	% now do the shading
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	% function t(i)
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		% fill interior arc
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		% fill exterior arc
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		% advance to next
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	% pop our function dict

	% handle Extend
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	% no need to extend if the radius of the last end is 0
		{	
			Nsteps/Function load FunEval sc	% last element
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				} 
				{	% r1 == r2, extend 1
					% r3 = r, x3 = (abs(xmax) + r), x1 = dx
					% x(i+1) r(i+1) x(i) r(i) shp
					xmax abs r1 add r1 dx r1 shp
				}	
				{	% no containment, r1 != r2
			
					r2 r1 gt{
						% we find a circle on our line which is outside the bbox in the
						% positive direction
						% x(i+1) r(i+1) x(i) r(i) shp
						calcmaxs dup	% maxs maxs
						% calculating xs: ((maxs+r1)*x2)/(x2-(r2-r1))
						r1 add dx mul dx r2 r1 sub sub div	% maxs xs
						exch 1 index	% xs maxs xs
						exch sub
						dx r2
						shp
					}{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						r1 neg r2 r1 sub div dx mul	% this is point of ending circle
						0		% radius of ending circle
						dx 		% point of starting circle
						r2		% radius of starting circle
						shp
					}ifelse
				}
			}			
			sh3tp get exec	% execute the extend at end proc for our shading type
		}if
	}if
}bd
/sh		% emulation of shfill operator for type 2 and type 3 shadings based on type 0 functions
{	% shadingDict --
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	% shadingtype
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	% llx lly urx ury
					2 index sub				% llx lly urx ury-lly
					3 index					% llx lly urx ury-lly llx
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			% shadingtype
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd

% end of language level 2 ONLY code

{restore}if not dup{save exch}if
% languagelevel3 ONLY code goes here
	L3?{	% we do these loads conditionally or else they will fail on a level 2 printer
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if

%currentdict dup maxlength exch length sub (number of extra slots in md = )print == flush	% *** how many entries are free
end
setpacking
% count 0 ne { pstack(***extras on stack during prolog execution***\n)print flush}if	% *** BARK if anything is left on stack
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 748 540
%%BeginPageSetup
cg_md begin
bp
sdmtx
%RBIBeginFontSubset: Helvetica
%!FontType1-1.0: Helvetica 1.0000.0.0000
14 dict begin/FontName /Helvetica def
/PaintType 0 def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for
dup 33 /B put
dup 34 /three put
dup 35 /H put
dup 36 /i put
dup 37 /g put
dup 38 /h put
dup 39 /e put
dup 40 /s put
dup 41 /t put
dup 42 /space put
dup 43 /V put
dup 44 /w put
dup 45 /E put
dup 46 /F put
dup 47 /W put
dup 48 /A put
dup 49 /L put
dup 50 /T put
dup 51 /G put
dup 52 /R put
dup 53 /N put
dup 54 /S put
dup 55 /D put
dup 56 /U put
dup 57 /P put
dup 58 /bullet put
dup 59 /a put
dup 60 /l put
dup 61 /n put
dup 62 /c put
dup 63 /o put
dup 64 /u put
dup 65 /d put
dup 66 /v put
dup 67 /f put
dup 68 /r put
dup 69 /C put
dup 70 /y put
dup 71 /b put
dup 72 /O put
dup 73 /slash put
dup 74 /z put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[2048 -1947 1 index div -985 2 index div 2961 3 index div 2297 5 -1 roll div]cvx def
/sfnts [<

002A002A002A002A40292A292827262524232221201F1E1D1C1B1A191817161514131211100D0C0B0A090807060504030201002C4523466020B02660B004262348482D2C452346236120B02661B004262348482D2C45234660B0206120B04660B004262348482D2C4523462361B0206020B02661B02061B004262348482D2C45234660B0406120B06660B004262348482D2C4523462361B0406020B02661B04061B004262348482D2C0110203C003C2D2C20452320B0CD442320B8015A51582320B08D44235920B0ED51582320B04D44235920B09051582320B00D44235921212D2C20204518684420B001602045B04676688A4560442D2C01B9400000000A2D2C00B9000040000B2D2C2045B00043617D6818B0004360442D2C45B01A234445B01923442D2C2045B00325456164B050515845441B2121592D2C20B0032552582359212D2C69B04061B0008B0C6423648BB8400062600C642364615C58B0036159B002602D2C45B0112BB0172344B0177AE5182D2C45B0112BB01723442D2C45B0112BB017458CB0172344B0177AE5182D2CB002254661658A46B040608B482D2CB0022546608A46B040618C482D2C4B53205C58B002855958B00185592D2C20B0032545B019236A4445B01A23444565234520B00325606A20B009234223688A6A606120B0005258B21A401A4523614459B0005058B219401945236144592D2CB9187E3B210B2D2CB92D412D410B2D2CB93B21187E0B2D2CB93B21E7830B2D2CB92D41D2C00B2D2CB9187EC4E00B2D2C4B525845441B2121592D2C0120B003252349B04060B0206320B000525823B002253823B002256538008A63381B212121212159012D2C456920B00943B0022660B00325B005254961B0805358B21940194523616844B21A401A4523606A44B209191A45652345604259B00943608A103A2D2C01B005251023208AF500B0016023EDEC2D2C01B005251023208AF500B0016123EDEC2D2C01B0062510F500EDEC2D2C20B001600110203C003C2D2C20B001610110203C003C2D2C764520B003254523616818236860442D2C7645B00325452361682318456860442D2C7645B0032545616823452361442D2C4569B014B0324B505821B0205961442DB8002B2C4BB800095058B101018E59B801FF85B800441DB9000900035F5E2DB8002C2C2020456944B001602DB8002D2CB8002C2A212DB8002E2C2046B003254652582359208A208A49648A204620686164B004254620686164525823658A592F20B00053586920B000545821B040591B6920B000545821B0406559593A2DB8002F2C2046B00425465258238A592046206A6164B0042546206A61645258238A592FFD2DB800302C4B20B0032650585158B080441BB04044591B21212045B0C05058B0C0441B2159592DB800312C2020456944B0016020





9DEBFEEE9B9B03024D01DA7D4E92203EA0783332252D2C355CB7C6FEDFF5763F7394626C3220302F223B67C4F4D28C8BEE040B0000010021000004C905BD00070034401A01061E00070204080917171A00FB0203250504FB0619088C5E182B4E10F44DF43CFD3CF44E456544E6003F3F3C4DFD3C3130011521112311213504C9FE11CAFE1105BDAFFAF2050EAF000000000200AAFFD9052F05BD00150016003C4023170527053810030A0002053A1009160316161409250C1A18012514191718A0219570182B2B4EF44DED4E10F64DED12392F003F3FED3F3C5D3130011114171633323736351133111007022120032619012101743C59D3FD5B31CA4986FE8CFE8C8549024305BDFC74A06AA0AD5E9F038CFCC7FEF192FEF6010A92010F0339000100340000053605BD0006008F40449001A0010240015401021601017805E6010267046805880403192802251203030400251206060501050203060300020504080817171A0402039E0500019E0619078E5E182B194E10F4184DFD3939FD3939194E456544E618003F3C3F173C123901874D2E2B872E182B4B5279400C01020100030401000102060587087D10C487087D10C43130015D005D717172090233012301011001A601A1DFFDE8D3FDE905BDFB1D04E3FA4305BD000000000100250000077105BD000C0156409508090178077909780B870186040547014B02440348044D08420A8908870AC802C703C707C80B0C580B6707680B890286038607890B9902960395079A0BA902A603A507AA0B0F0808070A080B1908160A5707060B08040A023E284528052506060700250C0C0B090401030B020305060C050002080A0B0307080E17171A0705068640080304F40A0209F4800B0001860C190D8E5E182B194E10F4184DFD39391AFD3939FD39391AFD3939194E456544E618003F173C3F173C12173901874D2EED872EED4B5279B4090A09080AB8019A400F120101020405030406070908090A08B8019A400A12040403010102000C0B877D1008C5872E18052B087D10C5870810C5872E18052B087D10C54B5179B301010002B8019AB6090A0904040503B8019A400F090908040503040607010001020C0B870810C0870810C08710057AFD1808C4188710057AFD7D08C4313001725D5D71005D7213090133090133012309012301FD0115014CD8014C0115DAFE7ED1FEADFEABD1FE8005BDFB5504ABFB5504ABFA4304C2FB3E05BD00030052FFDC04470449000F003B003C00DD40382A30010A100B1B0C1C2733481069096A10073908120C09031B320724091D100C1D3B2B022E293BB73B023B322A2512100705081C2722171CB8018A4023171D1F07271D2E0B021D350B3C073C3C1C1407292AA8241A3E1B291C4A0F2738193D3EBC0197002100B9019600182B2B4EF44DEDF4ED4E10F64DE4



2726232206151417161F011617161514062322262701EF082544A864983D27738F894174DBB9F26B4302AA05263E99666945284E77C24269D9DEEFC70701B701505A3057575B4524161D24222A498198BC8E5A683D32474E40462A19131D2F2C45948FD0D9A002F900010017FFEF0209055A00180052B50D2E0AC00E01B8013F40250416391703060E0A111A17171A0301062900150E150F031F030203FC1619191AFC21677D182B2B4EF44DFD5D39C42F3CFD3C104E456544E6002F3F3F3C4DFD3CED10FDE431301333113315231114171633323637150E012322263511233533A8B6ABAB2615310D1E141F43277E5A9191055AFED593FD4538130B01028E0908816702C593000000020080FFE303DE044900170018005E403AB814C81402091308141913191428067703D707070800050E0A00060D0A051D120B180718180B160D2E0A290C0B1A1A01291619191AD2216242182B2B4EF44DED4E10F63C4DFDE41112392F003F3FED3F3F3C391112393130005D015D0111141716333237363511331123370607062322272635112501381A3083BC4425B4AA0223346793E5532D01AF042FFD39523460A85A9D020EFBD19E3D2A5499528902D81A000001000B000003EA042F00060102402E4201C5010200670068026803670687048805A700A802084700480245044A0586048905C704C80508492873280708B80109B321677E182B2B4B5279B8FF70B40105042004B80183B703036D1202010205B80183401E06066D120000010506040301010502030603000605040A0817171A03AF02BA018400000184B301AF0619194EF4184DFDE0E0FD194E456544E618003F3C3F173C1239011112391239074D2E2B104EE44D072E2B104EE44D2B4B51794025022912030304002912060605010502030603000605040A0817171A020403AF050001AF0619194EF4184DFD3939FD3939194E456544E618003F3C3F173C12390507102B07102B313001715D005D7113090133012301DC011E012BC5FE6CC0FE75042FFC980368FBD1042F00010012000005A1042F000C0120407E4704AA09028E09014607490B87038A08850ACA02C403C607C908C60AC90B0B66076A08650A690B76077908760A790B85078A0B0A4607490B0247037700780503572816282B012B043B013B048F018F0406090401030B020305060C050006080A0B03070A0E17171A0705069B080304C40A0209C40B00019B0C190D677E182B194E10F4184DFD3939FD3939FD3939FD3939194E456544E618003F173C3F173C1217395D4B5179400C0529120607060029120C0C0B0587102B87102B4B5279B4090A09080AB8018B401312010102070604050529120606070908090A08B8018B400E120404030B0C00010029120C0C0B01874D2E2B87107DC41805872E182B087D10C505872E182B87


2B2B2B2B456953427374B8019A2045694B20B02853B049515A58B020615944B801A6204569447500
00>] def
/CharStrings 44 dict dup begin
/.notdef 0 def
/space 1 def
/slash 2 def
/three 3 def
/A 4 def
/B 5 def
/C 6 def
/D 7 def
/E 8 def
/F 9 def
/G 10 def
/H 11 def
/L 12 def
/N 13 def
/O 14 def
/P 15 def
/R 16 def
/S 17 def
/T 18 def
/U 19 def
/V 20 def
/W 21 def
/a 22 def
/b 23 def
/c 24 def
/d 25 def
/e 26 def
/f 27 def
/g 28 def
/h 29 def
/i 30 def
/l 31 def
/n 32 def
/o 33 def
/r 34 def
/s 35 def
/t 36 def
/u 37 def
/v 38 def
/w 39 def
/y 40 def
/z 41 def
/bullet 42 def
/u20B8 43 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.00048828125 0 0 0.00048828125 0 0 ] def
/FontBBox{-1947 -985 2961 2297}def
/UniqueID 4072461 def
currentdict currentfile eexec

8E7813F90E7677BD8453B8C10DFDC23A673815A2A16C456E1032CD888F81A6A966B16185545DA24BA9559154C8824D8D606801345F4235C26F00DF845B390A58864F841690867787C4B0602D816D057D4D1670A7AC75B5717AAEB45F7A5EC720701F87C69BD80C0DA9CE0C863D096D38F41BB805BBB2C0700E1EB8E36D91AA56A9D835C61738D62ADFF9C954725A92C68BB7072566D30894F7031CB8D3696F5271FCE82B148F25D0A1DB075576790F835830E3369BBF97516C8853A7BA5BF5FEF8DF7AF49917F7524022884D7BBF5F2C36754635CA1FD4B03B200C59528693DDEC07EF66386481E7BEE6E646A526FC3F87278ABDA7682AD71EAEF4BAA1C808224BE5091AEFF380FD20FEE65D543DB64E5CDB1DEE348B729FB1050AE626A8BEFB8C36A000747ABB305552EE11D14688CAC7AB65A9CC4EDE51F1ABAD9C7A731EF239FB1E2ABE9C8B9D7DEFFFFA76DEAE158A2A5A627EFF073D2D78D71387008D2B01BE588284892671E4467FEA79BA350D87FFFBD18510D2DE6C034016663A085E4FE1EA8988FAF777DF0776C76279F151C9DE0712C60843C6F7FD87502A0E0A1C9A4BBD0C14404BD01A9BBBD4F379CB39EDF3E30B33DF0BD5A204B094C419B17453374F98589628F28B52A740C041FE26C9B4B4C884A1892E11D4D8CBB03F95B2C7A5E125AE1511E9DB93F6EF2CB59CDF614A51AE54941B90D59946CE296F2DF16EA967D2717A04911F6A14E39979F7953E33B1BCCB72D68A831712CB69A2AF09EA6514F46BC13442313AF6B2109E0D6FDF99F5CC4A2C6431E145164A0303171B5AC501E29161956288BC5307C15CCF78C7B5C22E8BA76A760FFE395FEFA19A51F5271BAD7D49FA7C9D5768ABE2EF9C4EC76F43905D09A71780A3477D0B40610A36407D1FB24377EFBF6F26A7F5B792D2D66E8937EAA1ADFCDA0960ADD80790F938C6CB8BBCA1BD5732C0A182C88A53AFEE35D95965B3F548EB465A9CBE5F31362EE8082D4538333D10F587302D0E101A910BF0C0170F7F725F6486CB02FB2B7B7D5C666BB81B81C9ACF8E3150FF0DC72A543C10705B9A02BEBD7DC3D7978812CE1937A290273F4BC48A03EA276D5DE7FEECECD31B6D6A9DEB685E6786607426D3F2F9915BE468179D649CBE88449C5F11B9ABEAD75CDD3039E37B0A5D3A9057A15F6B20A0635A953EE5D1751177106907F3AFFA3657C28932E7AA8E5F4EA1CFECAEDDBE388FD8ACC824FB41834B4FB501A2BA2405E32D75AAD0284F1E2489B93E1B13E0786A0A04A4A23967508A8817294878453DBD6EAD3733CD8A72142212624BF49B2A1218032A96CA582B49F2A6BEA00BDDCD307CA66C61E0BF62494BF8618C866A14DCB558EE110C60CD5ACC3A282161247D3E11BC7B1C143453352BDCED709FF5AD7498832D8D18D71B5CF360FFAD58A01DF726A3DFD11DA3BC7CFC9E7
E0F26AB84CA9AB53260699E9035B7A8805B69D350A760EF9310DC8ADD3552410E381F85A4758A7C5BDAA3F06AA127246226A990C85D77E64D0FD95009E6042DD7ACA0936C2E37243C322AA6DE172163BF27FFA8D6481EDFFB6C58E2506060B082A9EDBC707C6DF4379D5C5FA9EA67D3725AB6A98987E6A55377E25E88BC297ED4643C39C1040D1A815CD44C08BBBFCCB39C5CF135F8BF85C69C94301850911B9E1B4E72424A33DD38776DB4E65FB5111CA0517F2A03F908213DD0A58B75F2DFC7277096E5B1534DCBAB0CEA26EB7565C5A1143A3E124ABAEBF874315B1763096E13847967361F2DAF7196443A5DF4CF42BCAE4286429FDF02BCD172BDFCE8AD9F01D0F7BB6A1431C31BC38CC83C62F092581C37E70862568C682511F883EDD8842F17CFE23AD8AAC2D6BDC142702D1515F70614BB149CBF6A94AF64306254FE875184FF7CEC272284DD2730D8D6DD47ECEA1EDA36E5E826C0EF9B1C4C6A9E576B527D06330C55CBBE3E1B7D982798C53EE9FB2DF9949D8A7B8D4E3E2C4FADC7E8F75D2E7170DBF529EAE329CF8DA6693E8C79888FD7DB5B6A21FDDADE0A2C81EA6D296CA754CD9E9B83306A9292F9493B63E2CC469D36D49BA1ECD26544EE5174F755C503A9ED5D456865E064B7E63AA2EF04D5D29127550D22A8F9FE7340EA748A3F151A1957DC9796ADE94596D1B9EB39C49815FF350C32081DF15889A093569A87C05D85AC4203AF87DB74ED4C208CE2F6799BA15547B6DC84C2FDE80F25D09CA2B15C358046F32E04E18EA2ECB4B6CF3FA875EBCDC82B36F417E98479F58721B87E7AF7DDBEB75A2693710D003614FEC15EDCCA87BB2DE1D0F948EBF21E1559F4CCB052C69BB1DEDD155C6372BF45D1DDE47A0CEFDA340C87034F8B51D682592C36855B190CA8E3EC0D066DD638B23910DD3C14AB81A48234633DC48ED5AA33E54BC48A2E18E95E5E1553F6563446EADA9D5B8EAAB8C4D11120E3EB5FD45EEEAE8FF0E6B5475404EDF5E75CFAA858E35AAE84F855C0193172F3ADA055F7EAA16DF1E5BADDEA3D49938727DFBF4BCFEEE197B09E86EC55C4F30B0CDF852E3A797C9234AAA8F98556B677A42A5632436F254BBBFF05C673A89A7A05E03217592383E85E5D5C06198A8D2D92DAEAD184001EE4E434262718D802AD7096C1010B2537DD2D05A991496ED9477370EAAEC0FDAB32BD393B83357B948BE10E987F3E4BCEB6A831577B3561845B8EE5EDF4BA7BDED0B1BE36FA881456344FA260FBD2B3877A8E4EB9F4164C0D0949C2716C6D9C9D42CB1F9DC2BB59EDF7F94C2E32E6BD928F8AA8FE5C1BAD9F8F149CC9E37A21CA787EA7A46EFC5971D1226609477B0FEAC0083929684456CED83AB770A735C6FE33B2E3B975230047743C840BDFD696311A305D59B2E39B961646DC6E26BF77DD1207AB773822852F69D9973ECB2
03A9605EC2AF641A41075CDB5500AE749F97826B8EFEAD123C2CFDCD883677ED000EE4DC29DBCC946F4BA9A6B3C62473F8BB95E7C8DBCCA47B0768E7176F099C8018898F0704F83171777547BD3C835CAC05E4EAD69A3B1CF2F1AE6E8C2873017F65B176C270A89E14D7AC034A0579287FE8104A8198C408ABA49D159C279D0AB065B1B2831F4356E001F6FF1CC707B33B42C5C6FC029053CCB977D811C870B7C5EDA526BFFA26743F3B386596A6BE1CF44F086BCAD118CB7F73A3ABFCBFCBDEBC97DB49C10867413515DAF324EB51DBE62FF0313B18138AEDA7996B4AA9076E936670636BA2777AEDD952DD9FF23EB597C24AFADC94704AA50F41B9E29C17416E19BA5CCCF38B705CC4357AB286A83F16EB2CFC8AC84CE53524C363D2BEE233B906B15B5C16F52AEC499ACB0E05D8E484AEC205102A4133D9F1A00159573A17B47C5F95B302F5C0A3C6139D30FBFFD0C7C44B867DA79608EE3984CBADA0C2B6ED1266704FCFCB73D90E5F0BE3E12346E5DB8FDDC227EDC23ECC55DFC6C855B9B297DADB0ECC67EF2D79300B657AFF835BAA1E5A500894A03642B2C9278FCEE1F949778DDABE9B8018EC3A0B01318F85843F7EDEAE305E740C468E10BBBFB295273A11A30CB911E89E47716C9D9681A934E77D9D923E5EEC11A201687B78D16FFCD2DD9F12A3CF46B995E7E50FF9E4B03B32711B7A6B241B516FE1CFE1594B08651E73DB6B5F96AA80C5998B79FCFB3F42935BC068823570941DC72A7A28E25C050F26E785C8805C52451B8904C3BE72D0987760EF639343AA5D10BE0F060B96FA1BA2D8F8941BE59E478E3C62FB3E0D113FFDE5DDB4FE52DDD73036FF2D151073AF77B2523B9F8FC43D53BC8359F025AB7278C9B17221CD8646DB7DC71B9BE5653A8807AF14B53AC469E5477DDE4DCB89549BEDF2EEC0636CE062FC0A6B5C21088087E38DDC8BEA3C577A6C085C2942B1938908E6BFBA9DE2360DE44B236FCDB0D70B187BFDFD3381CA97B31A0186A93733E4D5D627CB2BCA8B5C50FF5CA8D14230E83C376A9BB9CD2347027F245FFE94FB48788BA65DEF72278FCC68EB3F15A85EE65F0B756B09EE7B2924094611BF2BF43B2DD45C392F05832EE774A56208207187DE297F8030388B074C6D2FC0276F753AA84CB2445BA7A7D6C1049A4B4A45184782CC0E41EC9B9C2DDD6A0DFA91C2BF890F708A13F5F974FC89BDC74BD9A1ECBB2420CE477F0B30314FA69A3466493DEAA25F1E7A5FA6A0FD42F974ECBF96EE684239AF27D60DD5960971D4B8E6F60D47C177FCB7EA8AA5FFFBC13B0B99DF33A44F5F4365601D059590A2A3410ED846163C5466ACD3A9B30895DC34F4912157B568A16259B879E7C286A3B5BE5BE272B13D40FBEA9A0F20EAA79898E090913CB0F7583A6DAB30E0B4C9071481ECD8BA94B09C2673508DB5F77901499EB6
CF4B7246DD3FA4760B7D4F05462E9213EA14D82FDA472720CA9357B2373535AAFD633921229DF3F10AB2B8A096789AC40EFFD0B7A302ECD7C9413F91E8945ED7BCBEF43D54EB1C8E264C1AEE5296A8B17E908460664ED240ECCA5A13F021E6C0A8C9AD6B84D9F2254C2CE64515A3EC8B22514958A343AD895D689D81E97631FC0C145D93E9570ECB06D4FD4D3655BAEFD7F0999B16314A0CCEAA07577B37BE3D970BBEBCB9332F5EC411036AD582E51C8B56FB93F81AA79B67495CB94D14B236EECA97106F3784CDCFDC17180750D9D0CCB9561B9AE742E57886E6FDAEBE66DD333D88C71B4DAB1272138CF8BDEB9E6418F13FCEEC17F4D1433C77F7C4E121A9CF8ADA65A141BF42A0592BFF29B5A832F124D5FCCA72539377E8D86E65F2DF7CC4F607FC3F1BD10CD30C964AA506DCC29289E587C70893702C3255ACFE1AB0D9BA57FB276D8ECE00812101971DD38C3A9DD1163EBFF91C8595BB5468CFB2CEEF3219AAE8050D884C99AB0862C26DD868650884F302602F0C6B2491AA7F920FA58C80717427A0777BC03AEA3B478D5347D2C11282C44DA6FC941B96A3983F0F1948EF17A7023F5A1C243E30D13B697577E255D15CD599E2D6AE6FAFB1FF7B88C68BB3092A9CB42A1853798FB585B9D6F31F52C318D569CB30BB305F3B24CB523743D6E15F48FEFC6C050296EC985CCD96180A71989A81FA940F896EB58C8A0F40F75A289963E616106669A4059864562B38C65D56F9A190412EE90B7B3D14D897E28529091FA9DC402774AB44ABDF5A7A186B2A24F1896AA902CF4F8AB02E47A95ECED937859F447DF5AC9CED398C8FF55E5E3017E06AF2F3BAE3658607FD24712AAAF534BBB3412D630B542C1646D2B9C941EE6452B83CCEC0789D313789EBE8E1AEED8B8B1B305528C813CAFF8FD9E512290B388F53EFB45614ED896F0C4B40F647A79B131A83F43BF356E16EF49A72EA7E799BF248A9BF5C770C37C96BCC1E5CC3EABDD7EAFDCFE56DD2FD03F4D4701236D456306B0C783B9C0F4CFE0593DF7324237DC69545BB04517C79B8BA04BBC6DCBEAC34A9E323BEDCAE8355E0D5271A76EA91CE717C781314EBF2B94FAC55F2B1433D0B4B39A9DF9964F12314384442543943C20D8C49AC65467482971E03180215949DC5EC407306FCFE05EE25EC13C3F3BFE98F73042CC05922D0897C2AC49F4CA5B4A251A2D78D9929B0D1ECDFCEF2C1ED122D62E0035D7176A1B28296219FE748B3B7691971E0AB50E768E70E56EE39D4764C3B870CBFE1E3B53F190608A2B40C6CB10BDE8D9B1F6A2F077FE446D655FD48D690F6C3C5CE84FE80B5B34517A34EBDCEF163BD498ECDAD7179C4C17E793DD98EC0343106424515AB6ACF901977DC5D88DED578D5EC1203D365AD7AC1FFD02247C4FAC8175C53B39632F1C43B86C693589A3E2EEAF1A0B51ED810
60FEF19A918C4FC526003EBFF89A1A71B1C44E113C02075DFCC1ABD6C1C5836339B8EC8012BF4CAE59E064B45591AA51790FF37E7F9C212EFB61667ECC83627DB63BCF7BF20C0565724EE44B13C2D7FE23729B2F85C7A91D33B121AC3A61AD4102BCD6C9E35F53C97F7B9063EE3BA5AF8695AAF5EB40E79E57B80E24C5951FDA6A97CABE16A0BC669F9963F9DA8EE3B843090F2FA86BACB0846F601288AE97CDC9431402CEE8F575E7862197A5B5B2470C27BED8ABCB4C38F0A1AE1AF735FD624B21072F1D359780FC209E08A5A348D731EC652B1C5590DF3222DF9A030A10246AAF593547BBF6C51B1BD392F53A259D65D7FC558738B029BBA1246D868784B2491D4FDF443AFD472748828FDC5BA152CAFE94EADA6DEB23E2C062740867057087DF18B196CE7D4222F7BC6FB3708F81B419A9313F0EFF24323E51B162DC3290959A2F6090FB209008F99ED96DE88953C90B3E428A3716894DE0C014FA7BD32DE6207631E1DA94D181F476AA9659C530090AEB8D73E56CB7F3C60FBDA29AC5AFDCA862CF2607B6792DB2E1BE2C5C1933A62F3BD1D0DBEA255AFA1C1D0017181F1E9DDC19DBA5FF59E143F5E664705B34D1E692E3A41EFE004B21F4C29020650F2DAC43697D15A44C97281E84FC9218DF031F4EB5A565CBC054E85983B77DDAB6AAF9441666C3B9FF4DAF2ACC7CA005C03C3D3372DC7EB1104FE9EC7337518C0D00B0DE9D9ED779618E365DC43006C79EBCF25D676880C45802C41606D71776DFFB74B471CC758AB97F5C87DB6024713F7E4E719245067EBE204403471F5CFA6335089394C2442C24FD20A4C48D24B8C52EDC5CB1767CF427AC4F63547DE031774CEADC6C4A542174DC14FA5631F9E4FC458C6ABAAC4818847006A699868A67179CD45CDDA71A13EBD094D9E62A353668982220F5D29F11AF88B76BE5065FEDBEA3794FEB9B0485FBF87891F19FEB8BD53F94B05229EEEDFAD0D5102C87F978F0BBE87986780169E6B5BCB3EC545DAA6EB56E1BF2E1F9621B41CAEAE96A27FF49A5C2D809EBA5B0C9B4CF1FF94D27D9F508EF8356FBA79056D09A5617549D5E19ECECBB8B4B2B8C78B5FD9A5A5A5D00F7A66494CDA0E19913BE10C972579831286C7644DFC5C61F5966B894ABC5A300B432D8EE149D29F3495E44824CBB5B7D2E6844E640F207406F9488FB41CDC2A518FC3F4794EE3981A2299859E4B1C877C9ECF19FD34646A63258758DEA2DF308F33D849A801E25AFFEB6C0E704E2BB48C74240038BD0E53B8C207A7DF99BC69E6648171AC9667BB518D7246B9B98D094791D64D97B8E5DA03B9328A0E22A8221A414C976434F85B927A12B34CD16B0D129C01C396861E7A0E544E9C0B3CA26CDF56A03
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/Helvetica cguidfix
/F1.1/Helvetica renmfont
[ /CIEBasedA 5 dict dup begin /WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeA { 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
 exec} bind 
def 
/MatrixA [ 0.9642 1.0000 0.8249 ] def 
/RangeLMN [ 0.0 2.0000 0.0 2.0000 0.0 2.0000 ] def 
/DecodeLMN [ { 0.9857  mul} bind { 1.0000  mul} bind { 1.3202  mul} bind ] def 
end ] /Cs1 exch/ColorSpace dr pop
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
] def 
/MatrixABC [ 0.4124 0.2126 0.0193 0.3576 0.7151 0.1192 0.1805 0.0722 0.9508 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs2 exch/ColorSpace dr pop
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
] def 
/MatrixABC [ 0.4124 0.2126 0.0193 0.3576 0.7151 0.1192 0.1805 0.0722 0.9508 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs3 exch/ColorSpace dr pop
[ /CIEBasedA 5 dict dup begin /WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeA { { 1.8008  exp } bind  exec} bind 
def 
/MatrixA [ 0.9642 1.0000 0.8249 ] def 
/RangeLMN [ 0.0 2.0000 0.0 2.0000 0.0 2.0000 ] def 
/DecodeLMN [ { 0.9857  mul} bind { 1.0000  mul} bind { 1.3202  mul} bind ] def 
end ] /Cs4 exch/ColorSpace dr pop
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
] def 
/MatrixABC [ 0.4124 0.2126 0.0193 0.3576 0.7151 0.1192 0.1805 0.0722 0.9508 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs5 exch/ColorSpace dr pop
%%EndPageSetup
/Cs1 SC
1 sc
q
0 0 748 540 rc
0 540 m
748 540 l
748 0 l
0 0 l
h
f
/Cs2 SC
1 1 1 sc
-1057 1304 m
2114 1304 l
2114 -988 l
-1057 -988 l
h
-1057 1304 m
f
1 J
1 j
0.60000002 i
/Cs3 SC
0 0 0 sc
1 0 0 -1 467 643 cm
-466.5 103.5 m
280 103.5 l
280 642 l
-466.5 642 l
h
-466.5 103.5 m
S
-31.583595 253.63205 m
-25.38578 259.91248 -25.38578 270.09503 -31.583595 276.37546 c
-37.781376 282.65591 -47.82996 282.65591 -54.02774 276.37546 c
-60.225555 270.09503 -60.225555 259.91248 -54.02774 253.63205 c
-47.82996 247.35159 -37.781376 247.35159 -31.583595 253.63205 c
S
/Cs1 SC
0 sc
0 i
1 0 0 -1 424.19434 377.99625 cm
/F1.1[ 10 0 0 -10 0 0]sf
-6.1157227 4 m
(!")[ 6.669922 0.000000 ] xS
1 0 0 -1 387.56476 458.49625 cm
-29.5 4 m
(#$%&'\(\)*+$',)[ 7.221680 2.221680 5.561523 5.561523 5.561523 5.000000 2.778320 2.778320 6.494141 2.221680 5.561523 0.000000 ] xS
0.60000002 i
/Cs3 SC
0 0 0 sc
1 0 0 -1 467 643 cm
-59.659302 296.61899 m
-46.576679 306.77261 -46.576679 323.23489 -59.659302 333.38852 c
-72.741852 343.54218 -93.95285 343.54218 -107.0354 333.38852 c
-120.11803 323.23489 -120.11803 306.77261 -107.0354 296.61899 c
-93.95285 286.46533 -72.741852 286.46533 -59.659302 296.61899 c
S
/Cs4 SC
0 sc
0 i
1 0 0 -1 383.65265 327.99625 cm
/F1.1[ 14 0 0 -14 0 0]sf
-8.9448242 5.5 m
(-.)[ 9.337891 0.000000 ] xS
0.60000002 i
/Cs3 SC
0 0 0 sc
1 0 0 -1 467 643 cm
-19.847351 289.00375 m
42.152649 289.00375 l
42.152649 308.50375 l
-19.847351 308.50375 l
h
-19.847351 289.00375 m
S
/Cs1 SC
0 sc
0 i
1 0 0 -1 478.15265 344.24625 cm
/F1.1[ 12 0 0 -12 0 0]sf
-23.786133 4 m
(/011-2)[ 10.886719 8.003906 6.673828 6.673828 8.003906 0.000000 ] xS
0.60000002 i
/Cs3 SC
0 0 0 sc
1 0 0 -1 467 643 cm
-13.347352 321.50375 m
48.652649 321.50375 l
48.652649 341.00375 l
-13.347352 341.00375 l
h
-13.347352 321.50375 m
S
/Cs4 SC
0 sc
0 i
1 0 0 -1 484.65265 311.74625 cm
-23.786133 4 m
(/011-2)[ 10.886719 8.003906 6.673828 6.673828 8.003906 0.000000 ] xS
0.60000002 i
/Cs3 SC
0 0 0 sc
1 0 0 -1 467 643 cm
-204.84735 282.00375 m
-142.84735 282.00375 l
-142.84735 301.50375 l
-204.84735 301.50375 l
h
-204.84735 282.00375 m
S
/Cs1 SC
0 sc
0 i
1 0 0 -1 293.15265 351.24625 cm
-23.786133 4 m
(/011-2)[ 10.886719 8.003906 6.673828 6.673828 8.003906 0.000000 ] xS
0.60000002 i
/Cs3 SC
0 0 0 sc
1 0 0 -1 467 643 cm
-241.84735 316.00375 m
-179.84735 316.00375 l
-179.84735 335.50375 l
-241.84735 335.50375 l
h
-241.84735 316.00375 m
S
/Cs1 SC
0 sc
0 i
1 0 0 -1 256.15265 317.24625 cm
-23.786133 4 m
(/011-2)[ 10.886719 8.003906 6.673828 6.673828 8.003906 0.000000 ] xS
0.60000002 i
/Cs3 SC
0 0 0 sc
1 0 0 -1 467 643 cm
-260.84735 242.50375 m
-198.84735 242.50375 l
-198.84735 262.00375 l
-260.84735 262.00375 l
h
-260.84735 242.50375 m
S
/Cs1 SC
0 sc
0 i
1 0 0 -1 237.15265 390.74625 cm
-23.786133 4 m
(/011-2)[ 10.886719 8.003906 6.673828 6.673828 8.003906 0.000000 ] xS
0.60000002 i
/Cs3 SC
0 0 0 sc
1 0 0 -1 467 643 cm
-126.50473 435.00375 m
-50.00473 435.00375 l
-50.00473 473.00375 l
-126.50473 473.00375 l
h
-126.50473 435.00375 m
S
/Cs1 SC
0 sc
0 i
1 0 0 -1 378.74527 188.99625 cm
/F1.1[ 14 0 0 -14 0 0]sf
-29.168945 5.5 m
(340526)[ 10.889648 10.110352 9.337891 10.110352 8.551758 0.000000 ] xS
0.60000002 i
/Cs3 SC
0 0 0 sc
1 0 0 -1 467 643 cm
102.40743 434.20477 m
127.40109 445.13947 127.40109 462.86804 102.40743 473.8027 c
77.413895 484.73746 36.891399 484.73746 11.897864 473.8027 c
-13.095799 462.86804 -13.095799 445.13947 11.897864 434.20477 c
36.891399 423.27005 77.413895 423.27005 102.40743 434.20477 c
S
/Cs1 SC
0 sc
0 i
1 0 0 -1 524.15265 188.99625 cm
-26.837891 5.5 m
(7-+*83)[ 10.110352 9.337891 9.337891 3.889648 10.110352 0.000000 ] xS
0.60000002 i
/Cs3 SC
0 0 0 sc
1 0 0 -1 467 643 cm
-198.09258 434.20477 m
-173.09891 445.13947 -173.09891 462.86804 -198.09258 473.8027 c
-223.08611 484.73746 -263.60861 484.73746 -288.60214 473.8027 c
-313.59579 462.86804 -313.59579 445.13947 -288.60214 434.20477 c
-263.60861 423.27005 -223.08611 423.27005 -198.09258 434.20477 c
S
/Cs4 SC
0 sc
0 i
1 0 0 -1 223.65265 188.99625 cm
-17.899902 5.5 m
(-091)[ 9.337891 9.337891 9.337891 0.000000 ] xS
/Cs1 SC
0 sc
1 0 0 -1 235 47.5 cm
-201 -5 m
(:*!"*$\(*!;<;=>")[ 4.901367 3.889648 9.337891 7.786133 3.889648 3.110352 7.000000 3.889648 9.337891 7.786133 3.110352 7.786133 7.786133 7.000000 0.000000 ] xS
-201 16 m
(:*0>>?@=\)$=%*\)??<*=''A\(*\)?*&;B'*A$CC'D'=\)*B$',\(*C?D*A$CC'D'=\)*@\('D\()[ 4.901367 3.124023 9.337891 7.000000 7.000000 7.786133 7.786133 7.786133 3.889648 3.110352 7.786133 7.786133 3.889648 3.889648 7.786133 7.786133 3.110352 3.889648 7.786133 7.786133 7.786133 7.786133 7.000000 3.889648 3.889648 7.786133 3.889648 7.786133 7.786133 7.000000 7.786133 3.889648 7.786133 3.110352 3.643555 3.889648 7.786133 4.662109 7.786133 7.786133 3.889648 3.889648 7.000000 3.110352 7.786133 10.110352 7.000000 3.889648 3.889648 7.786133 4.662109 3.889648 7.786133 3.110352 3.643555 3.889648 7.786133 4.662109 7.786133 7.786133 3.889648 3.889648 7.786133 7.000000 7.786133 4.662109 0.000000 ] xS
0.60000002 i
/Cs3 SC
0 0 0 sc
1 0 0 -1 467 643 cm
-280.88721 385.47949 m
-274.83405 391.61334 -274.83405 401.55823 -280.88721 407.69205 c
-286.94034 413.82593 -296.75436 413.82593 -302.8075 407.69205 c
-308.86066 401.55823 -308.86066 391.61334 -302.8075 385.47949 c
-296.75436 379.34564 -286.94034 379.34564 -280.88721 385.47949 c
S
/Cs4 SC
0 sc
0 i
1 0 0 -1 175.15265 246.41422 cm
/F1.1[ 10 0 0 -10 0 0]sf
-6.1157227 4 m
(!")[ 6.669922 0.000000 ] xS
0.60000002 i
/Cs3 SC
0 0 0 sc
1 0 0 -1 467 643 cm
-118.13721 385.10413 m
-112.08405 391.23798 -112.08405 401.18286 -118.13721 407.31668 c
-124.19033 413.45056 -134.00438 413.45056 -140.0575 407.31668 c
-146.11064 401.18286 -146.11064 391.23798 -140.0575 385.10413 c
-134.00438 378.97028 -124.19033 378.97028 -118.13721 385.10413 c
S
/Cs1 SC
0 sc
0 i
1 0 0 -1 337.90265 246.78958 cm
-6.1157227 4 m
(!")[ 6.669922 0.000000 ] xS
0.60000002 i
/Cs3 SC
0 0 0 sc
1 0 0 -1 467 643 cm
180 399.2225 m
256.5 399.2225 l
256.5 418.7225 l
180 418.7225 l
h
180 399.2225 m
S
/Cs1 SC
0 sc
0 i
1 0 0 -1 685.25 234.0275 cm
/F1.1[ 12 0 0 -12 0 0]sf
-29.006836 4 m
(-2#*,;<<'\))[ 8.003906 7.330078 8.666016 3.333984 8.666016 6.673828 2.666016 2.666016 6.673828 0.000000 ] xS
0.60000002 i
/Cs3 SC
0 0 0 sc
1 0 0 -1 467 643 cm
180 431.9725 m
256.5 431.9725 l
256.5 451.4725 l
180 451.4725 l
h
180 431.9725 m
S
/Cs1 SC
0 sc
0 i
1 0 0 -1 685.25 201.2775 cm
-29.006836 4 m
(!2E*,;<<'\))[ 8.003906 7.330078 8.666016 3.333984 8.666016 6.673828 2.666016 2.666016 6.673828 0.000000 ] xS
0.60000002 i
/Cs3 SC
0 0 0 sc
1 0 0 -1 467 643 cm
-427.84735 393.25375 m
-351.34735 393.25375 l
-351.34735 412.75375 l
-427.84735 412.75375 l
h
-427.84735 393.25375 m
S
/Cs1 SC
0 sc
0 i
1 0 0 -1 77.402649 239.99625 cm
-29.006836 4 m
(-2#*,;<<'\))[ 8.003906 7.330078 8.666016 3.333984 8.666016 6.673828 2.666016 2.666016 6.673828 0.000000 ] xS
0.60000002 i
/Cs3 SC
0 0 0 sc
1 0 0 -1 467 643 cm
-427.84735 426.00375 m
-351.34735 426.00375 l
-351.34735 445.50375 l
-427.84735 445.50375 l
h
-427.84735 426.00375 m
S
/Cs1 SC
0 sc
0 i
1 0 0 -1 77.402649 207.24625 cm
-29.006836 4 m
(!2E*,;<<'\))[ 8.003906 7.330078 8.666016 3.333984 8.666016 6.673828 2.666016 2.666016 6.673828 0.000000 ] xS
0.60000002 i
/Cs5 SC
0.53707904 0.53707904 0.53707904 sc
1 0 0 -1 467 643 cm
111.15265 438.50375 m
164.36481 410.89862 l
S
0 i
CM
638.46606 235.78537 m
629.98334 234.76437 l
632.74628 229.43842 l
h
638.46606 235.78537 m
f
0 J
0 j
1 0 0 -1 467 643 cm
171.46609 407.21463 m
162.98331 408.23563 l
165.74629 413.56158 l
h
171.46609 407.21463 m
S
1 J
1 j
0.60000002 i
118.42982 445.90457 m
163.33801 439.96893 l
S
0 i
CM
638.26904 204.07932 m
629.94489 206.00519 l
630.73108 200.05692 l
h
638.26904 204.07932 m
f
0 J
0 j
1 0 0 -1 467 643 cm
171.26903 438.92068 m
162.9449 436.99481 l
163.73111 442.94308 l
h
171.26903 438.92068 m
S
1 J
1 j
0.60000002 i
212.17578 459.9725 m
210.34427 512.60974 l
S
0 i
CM
677.0661 122.3951 m
680.34247 130.28593 l
674.34607 130.49458 l
h
677.0661 122.3951 m
f
0 J
0 j
1 0 0 -1 467 643 cm
210.06607 520.60492 m
213.34245 512.71405 l
207.34608 512.50543 l
h
210.06607 520.60492 m
S
/Cs1 SC
0 sc
1 0 0 -1 653.65265 107.49625 cm
-84.5 4 m
(9;F$=%*?@\)*7-+*83*>?=\)D;>\)?D\()[ 8.003906 6.673828 6.000000 2.666016 6.673828 6.673828 3.333984 6.673828 6.673828 3.333984 3.333984 8.666016 8.003906 8.003906 3.333984 8.666016 9.333984 3.333984 6.000000 6.673828 6.673828 3.333984 3.996094 6.673828 6.000000 3.333984 6.673828 3.996094 0.000000 ] xS
1 0 0 -1 102.65265 107.49625 cm
-76.5 4 m
(9;F$=%*?@\)*-091*>?=\)D;>\)?D\()[ 8.003906 6.673828 6.000000 2.666016 6.673828 6.673828 3.333984 6.673828 6.673828 3.333984 3.333984 8.003906 8.003906 8.003906 6.234375 3.333984 6.000000 6.673828 6.673828 3.333984 3.996094 6.673828 6.000000 3.333984 6.673828 3.996094 0.000000 ] xS
1 J
1 j
[
4
4
] 0 d
0.60000002 i
/Cs5 SC
0.53707904 0.53707904 0.53707904 sc
1 0 0 -1 467 643 cm
-429.84735 356.50375 m
244.15265 356.62094 l
S
-173.13225 356.54837 m
-173.13225 528.50372 l
S
-27.935242 356.62094 m
-27.935242 528.50372 l
S
[] 0 d
-198.34735 252.50375 m
-198.34735 252.50375 -168.92743 237.8597 -136.34735 255.56625 c
-120.20854 264.33734 -107.05358 279.00354 -97.886467 291.5722 c
S
-141.34735 291.00375 m
-116.84735 304.95688 l
S
-179.34735 329.50375 m
-116.23377 319.97098 l
S
-21.847351 293.50375 m
-52.794727 304.32275 l
S
-13.347352 326.26611 m
-50.541073 320.28198 l
S
-287.71518 433.82404 m
-337.58569 411.14157 l
S
0 i
CM
122.13216 235.17056 m
128.17227 229.12762 l
130.65637 234.58923 l
h
122.13216 235.17056 m
f
0 J
0 j
1 0 0 -1 467 643 cm
-344.86783 407.82944 m
-338.82773 413.87238 l
-336.34363 408.41077 l
h
-344.86783 407.82944 m
S
1 J
1 j
0.60000002 i
-303.60327 444.54773 m
-336.81705 439.33545 l
S
0 i
CM
122.27968 204.90482 m
129.71785 200.70082 l
130.64806 206.62827 l
h
122.27968 204.90482 m
f
0 J
0 j
1 0 0 -1 467 643 cm
-344.72034 438.09518 m
-337.28217 442.29919 l
-336.35196 436.37173 l
h
-344.72034 438.09518 m
S
1 J
1 j
0.60000002 i
-112.34735 332.50375 m
-112.34735 332.50375 -185.60158 340.36343 -222.71454 374.785 c
-237.07709 388.10599 -243.41324 402.9809 -245.78433 416.21198 c
S
0 i
CM
220.31709 218.84142 m
224.19698 226.45367 l
218.23497 227.12784 l
h
220.31709 218.84142 m
f
0 J
0 j
1 0 0 -1 467 643 cm
-246.68291 424.1586 m
-242.80302 416.54633 l
-248.76503 415.87216 l
h
-246.68291 424.1586 m
S
1 J
1 j
0.60000002 i
-60.347351 335.00375 m
-60.347351 335.00375 -17.135689 336.56 16.152649 370.27328 c
30.28768 384.58878 39.811092 401.84393 46.090668 416.96109 c
S
0 i
CM
515.9624 218.57729 m
515.88873 227.12097 l
510.28912 224.96588 l
h
515.9624 218.57729 m
f
0 J
0 j
1 0 0 -1 467 643 cm
48.962402 424.4227 m
48.888733 415.87903 l
43.289131 418.03412 l
h
48.962402 424.4227 m
S
/Cs1 SC
0 sc
1 0 0 -1 79.402649 298.99625 cm
-45 4 m
(!;<;=>'*+$\($G$<$\)F)[ 8.003906 6.673828 2.666016 6.673828 6.673828 6.000000 6.673828 3.333984 7.792969 2.666016 6.000000 2.666016 6.673828 2.666016 2.666016 2.666016 3.333984 0.000000 ] xS
1 J
1 j
0.60000002 i
/Cs3 SC
0 0 0 sc
1 0 0 -1 467 643 cm
116.5043 385.21408 m
122.70211 391.49451 122.70211 401.67706 116.5043 407.95749 c
110.30651 414.23795 100.25793 414.23795 94.06015 407.95749 c
87.862335 401.67706 87.862335 391.49451 94.06015 385.21408 c
100.25793 378.93362 110.30651 378.93362 116.5043 385.21408 c
S
/Cs1 SC
0 sc
0 i
1 0 0 -1 572.28223 246.41422 cm
/F1.1[ 10 0 0 -10 0 0]sf
-6.1157227 4 m
(!")[ 6.669922 0.000000 ] xS
0.60000002 i
/Cs3 SC
0 0 0 sc
1 0 0 -1 467 643 cm
-64.342743 202.49533 m
-58.144928 208.77576 -58.144928 218.95831 -64.342743 225.23874 c
-70.540527 231.51918 -80.589111 231.51918 -86.786888 225.23874 c
-92.984703 218.95831 -92.984703 208.77576 -86.786888 202.49533 c
-80.589111 196.21487 -70.540527 196.21487 -64.342743 202.49533 c
S
/Cs4 SC
0 sc
0 i
1 0 0 -1 391.43518 429.13297 cm
-6.1157227 4 m
(!")[ 6.669922 0.000000 ] xS
0.60000002 i
/Cs5 SC
0.53707904 0.53707904 0.53707904 sc
1 0 0 -1 467 643 cm
-91.047592 210.32484 m
-135.28534 200.87003 -264.62427 177.92699 -351.34735 211.00375 c
-430.19101 241.07526 -446.24356 306.93503 -449.29169 338.73627 c
S
0 J
0 j
0 i
-449.78836 354.72186 m
-449.29147 338.72958 l
-446.54135 346.81888 m
-449.78836 354.72186 l
-452.53848 346.63254 l
-446.29294 338.82272 m
-449.53992 346.72571 l
-452.29004 338.63641 l
S
1 J
1 j
0.60000002 i
-60.144249 210.05531 m
-18.919834 200.59647 95.942627 179.09671 173.15265 212.00375 c
244.15112 242.26343 258.50049 307.95337 261.18796 339.70038 c
S
0 J
0 j
0 i
261.6033 355.69034 m
261.18784 339.69571 l
264.39456 347.61511 m
261.6033 355.69034 l
258.39658 347.77094 l
264.18683 339.61783 m
261.39557 347.69302 l
258.18884 339.77362 l
S
/Cs1 SC
0 sc
1 0 0 -1 484.65265 377.99625 cm
-37.5 4 m
(.?@=A;\)$?=*+$',)[ 6.108398 5.561523 5.561523 5.561523 5.561523 5.561523 2.778320 2.221680 5.561523 5.561523 2.778320 6.494141 2.221680 5.561523 0.000000 ] xS
1 0 0 -1 168.40265 273.99625 cm
-25 4 m
(-=\)$\)F*+$',)[ 6.669922 5.561523 2.778320 2.221680 2.778320 5.000000 2.778320 6.494141 2.221680 5.561523 0.000000 ] xS
1 0 0 -1 571.90265 273.99625 cm
-25 4 m
(-=\)$\)F*+$',)[ 6.669922 5.561523 2.778320 2.221680 2.778320 5.000000 2.778320 6.494141 2.221680 5.561523 0.000000 ] xS
1 0 0 -1 332.90265 273.99625 cm
-31 4 m
(6@G*HD%*+$',)[ 6.669922 5.561523 5.561523 2.778320 7.778320 3.330078 5.561523 2.778320 6.494141 2.221680 5.561523 0.000000 ] xS
1 J
1 j
0.60000002 i
/Cs5 SC
0.53707904 0.53707904 0.53707904 sc
1 0 0 -1 467 643 cm
-69.847351 340.50375 m
-69.847351 340.50375 -44.63245 357.10254 -49.847351 389.25766 c
-51.996185 402.50739 -58.895351 415.83112 -66.265182 426.91818 c
S
0 i
CM
396.1142 209.54756 m
403.18259 214.34734 l
398.28369 217.81154 l
h
396.1142 209.54756 m
f
0 J
0 j
1 0 0 -1 467 643 cm
-70.885811 433.45242 m
-63.81741 428.65268 l
-68.716316 425.18845 l
h
-70.885811 433.45242 m
S
/Cs1 SC
0 sc
1 0 0 -1 207.5 511.9375 cm
/F1.1[ 22 0 0 -22 0 0]sf
-187 8 m
(0>>?@=\)$=%*2??<*,I*HD%;=$J;\)$?=*E&;D\))[ 14.673828 11.000000 11.000000 12.235352 12.235352 12.235352 6.112305 4.887695 12.235352 12.235352 5.725586 11.000000 12.235352 12.235352 4.887695 6.112305 15.887695 6.112305 6.112305 17.112305 7.326172 12.235352 12.235352 12.235352 4.887695 11.000000 12.235352 6.112305 4.887695 12.235352 12.235352 6.112305 15.887695 12.235352 12.235352 7.326172 0.000000 ] xS
1 J
1 j
0.60000002 i
/Cs5 SC
0.53707904 0.53707904 0.53707904 sc
1 0 0 -1 467 643 cm
-386.50946 459.9725 m
-388.34097 512.60974 l
S
0 i
CM
78.380829 122.3951 m
81.657204 130.28593 l
75.660835 130.49458 l
h
78.380829 122.3951 m
f
0 J
0 j
1 0 0 -1 467 643 cm
-388.61917 520.60492 m
-385.3428 512.71405 l
-391.33917 512.50543 l
h
-388.61917 520.60492 m
S
ep
end
%%Trailer
%%EOF
